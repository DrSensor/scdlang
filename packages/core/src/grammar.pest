DescriptionFile = _{ SOI ~ CRLF? ~ (
  NEWLINE* ~ (
    expression ~ !(expression|StateName)
  ) ~ NEWLINE*
)* ~ EOI }

expression =  { (self_transition|(StateName ~ transition)) ~ trigger? }
  self_transition = { LoopTo ~ StateName }
  transition      = { ( TransitionToggle
                      | TransientLoopTo | LoopTo | TransitionTo
                      | TransientLoopFrom | LoopFrom | TransitionFrom
                      ) ~ StateName }
  trigger         = { TriggerAt ~ EventName }

// #region symbol/operator
TransitionTo           = @{ "-"+ ~ ">" }
TransitionFrom         = @{ "<" ~ "-"+ }
TransitionToggle       = @{ "<" ~ "-"+ ~ ">" }
LoopTo                 = @{ "-"+ ~ ">>" }
LoopFrom               = @{ "<<" ~ "-"+ }
TransientLoopTo        = @{ ">" ~ "-"+ ~ ">" }
TransientLoopFrom      = @{ "<" ~ "-"+ ~ "<" }
TriggerAt              = @{ "@" }
// #endregion

// #region name
StateName = ${ PASCAL_CASE|QUOTED }
EventName = ${ PASCAL_CASE|QUOTED }
// #endregion

PASCAL_CASE = @{ ASCII_ALPHA_UPPER ~ ASCII_ALPHANUMERIC* }
QUOTED      = @{ single_quote|double_quote|backtick }
  single_quote = _{ "'" ~ (!(NEWLINE|"'") ~ "\\"? ~ ANY)* ~ "'" }
  double_quote = _{ "\"" ~ (!(NEWLINE|"\"") ~ "\\"? ~ ANY)* ~ "\"" }
  backtick     = _{ "`" ~ (!"`" ~ "\\"? ~ ANY)* ~ "`" }

WHITESPACE = _{ " " | "\t" }
COMMENT    = _{ line_comment | block_comment }
  line_comment  = _{ "//" ~ (!NEWLINE ~ ANY)* }
  block_comment = _{ "/*" ~ (block_comment|(!"*/" ~ ANY))* ~ "*/" }

// use for handling data from `stdin`
CRLF = _{
  ("\u{000D}" ~ "\u{000A}")
  | ("\u{000A}" ~ "\u{000D}")
  | "\u{000A}" | "\u{000D}"
  | "\u{001E}"
}
// see https://en.wikipedia.org/wiki/Newline#Representation